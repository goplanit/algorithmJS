// [문제]봉우리
// 지도 정보가 N*N 격자판에 주어집니다. 각 격자에는 그 지역의 높이가 쓰여있습니다.
// 각 격자판의 숫자 중 자신의 상하좌우 숫자보다 큰 숫자는 봉우리 지역입니다. 봉우리 지역이 몇 개있는 지 알아내는 프로그램을 작성하세요.
// 격자의 가장자리는 0으로 초기화 되었다고 가정한다.만약 N=5 이고, 격자판의 숫자가 다음과 같다면 봉우리의 개수는 10개입니다.

// 0 0 0 0 0 0 0
// 0 5 3 7 2 3 0
// 0 3 7 1 6 1 0
// 0 7 2 5 3 4 0
// 0 4 3 6 4 1 0
// 0 8 7 3 5 2 0
// 0 0 0 0 0 0 0

// ▣ 입력설명
// N줄에 걸쳐 각 줄에 N개의 자연수가 주어진다. 각 자연수는 100을 넘지 않는다.

// ▣ 출력설명
// 봉우리의 개수를 출력하세요.

// ▣ 입력예제 1
// 5
// 5 3 7 2 3
// 3 7 1 6 1
// 7 2 5 3 4
// 4 3 6 4 1
// 8 7 3 5 2
// ▣ 출력예제 1
// 10

// 이번문제는 좌표가 주어지고, 상하좌우 4방면을 비교하여 높은 숫자의 개수를 출력하는 문제이다.
// 5*5의 격자판 형태로 입력값이 주어지므로, 행과 열을 전부 확인하기 위해 2중 for문을 사용해야하며,
// 상하좌우 4방면을 체크하기 위해 for문을 한번 더 사용하여 체크해야만 한다.
// 먼저, 행과 열의 상하좌우를 확인할 수 있는 변수에 좌표값을 계산할 수 있는 값의 배열을 만들고,
// 2중 for문을 통해 모든 행과 열을 돌면서 해당 좌표를 기준으로 4방면을 확인할 수 있는 for문을 통해 4방면의 좌표를 구한다.
// 외곽의 숫자가 없을 경우가 있으므로, if문을 통해 외곽의 숫자가 없거나 4방면의 숫자가 충족될 시 결과값을 +1을 해준다.
// 모든 for문을 돌게 되면, 최종 결과값이 도출된다.

function solution(arr) {
  let result = 0;
  let len = arr.length;
  let rowX = [-1, 0, 1, 0]; // 행의 상, 우, 하, 좌를 비교할 때 사용(시계방향)
  let columnY = [0, 1, 0, -1]; // 열의 상, 우, 하 좌를 비교할 때 사용(시계방향)
  for (let i = 0; i < len; i++) {
    for (let j = 0; j < len; j++) {
      let isTrue = 1; // isTrue가 1일때 result 변수에 1씩 증가하기 위해 초기값 설정
      for (let k = 0; k < 4; k++) {
        // 4방면을 확인하는 for문
        let nextX = i + rowX[k]; // 4방면 확인을 위한 다음 행의 좌표
        let nextY = j + columnY[k]; // 4방면 확인을 위한 다음 열의 좌표
        if (
          nextX >= 0 &&
          nextX < len &&
          nextY >= 0 &&
          nextY < len &&
          arr[nextX][nextY] >= arr[i][j] // 외곽의 숫자가 없을 경우 확인하고, 모든 조건이 충족되는지 확인
        ) {
          isTrue = 0; // 조건이 맞지 않다면 isTrue를 0으로 하여 false를 만들고 빠져나온다.
          break;
        }
      }
      if (isTrue) result++;
    }
  }

  return result;
}

let arr = [
  [5, 3, 7, 2, 3],
  [3, 7, 1, 6, 1],
  [7, 2, 5, 3, 4],
  [4, 3, 6, 4, 1],
  [8, 7, 3, 5, 2],
];
console.log(solution(arr));
